!pip install keras tensorflow -U

import numpy as np
df = np.loadtxt("https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv", delimiter=",")
df

df.shape


x = df[:,:8]
y = df[:,8]

from sklearn.model_selection import train_test_split
X_train, X_temp, y_train, y_temp = train_test_split(x, y, test_size=0.2, random_state=42)
X_test, X_val, y_test, y_val = train_test_split(X_temp, y_temp, test_size=0.5, random_state=42)

print(f"x train shape{X_train.shape}")
print(f"y train shape{y_train.shape}")
print(f"x test shape{X_test.shape}")
print(f"y test shape{y_test.shape}")
print(f"x val shape{X_val.shape}")
print(f"y val shape{y_val.shape}")

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
X_val = scaler.transform(X_val)

from collections import Counter
Counter(y)
Counter({np.float64(1.0): 268, np.float64(0.0): 500})

import seaborn as sns
from tensorflow.keras.models import Sequential

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, InputLayer

model = Sequential([
InputLayer(input_shape=(8,)),
Dense(50, activation='relu'),
Dense(50, activation='relu'),
Dense(50, activation='relu'),
Dense(50, activation='relu'),
Dense(1, activation='sigmoid')
])


model.summary()

opt = tf.keras.optimizers.Adam(learning_rate=0.0001)
model.compile(loss='binary_crossentropy', optimizer=opt, metrics=['accuracy'])

history = model.fit(x=x,y=y,epochs=300, batch_size=50,validation_data=(X_val,y_val))

losses = pd.DataFrame(model.history.history)
losses.plot()

y_pred = model.predict(X_test)

y_pred






